from loader import db, dp, bot
from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards.keyboard import *
from filters.filters import *
from states.States import *
from config import admins
from aiogram.dispatcher.filters import Text

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã-----------------------------------------------------------------------------------------------------------------------------
@dp.message_handler(commands='admin')
@dp.message_handler(Text(equals=['admin', '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä']))
async def admin_panel(message: types.Message):
	if message.from_user.id in admins:
		print(f"-------–ê–¥–º–∏–Ω {message.from_user.username} –∑–∞—à–µ–ª –Ω–∞–≤–µ—Å—Ç–∏ —Å—É–µ—Ç—É---------")
		await message.answer(
        f"üíé –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å <b><u>{message.from_user.username}</u></b>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏\n‚öôÔ∏è –ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?",
        parse_mode="html",
        reply_markup=admin_start)
	else:
		print(f"/////–ù–µ —Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ {message.from_user.username}////////")
		await message.answer("üö∑–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")

@dp.message_handler(state="*", commands='–æ—Ç–º–µ–Ω–∞')
@dp.message_handler(Text(equals=['—Å—Ç–æ–ø'], ignore_case=True), state="*")
async def cancel_handler(message: types.Message, state: FSMContext):
	if message.from_user.id in admins:
	    current_state = await state.get_state()
	    if current_state is None:
	        return
	    await state.finish()
	    await message.answer("‚úÖ–£—Å–ø–µ—à–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞", reply_markup=admin_start)
	else:
		await message.answer("üö∑–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω–µ—Ü-----------------------------------------------------------------------------------------------------------------------
@dp.message_handler(state=BanUsers.loginuser)
async def baned_user(message: types.Message, state: FSMContext):

	await state.update_data(loginuser=message.text)

	userban = db.get("SELECT * FROM users WHERE login = ?", (message.text,))

	if not userban:
		await message.answer(f"üí¢ –ù–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ª–æ–≥–∏–Ω–æ–º: {message.text} üí¢")
	else:
		if userban[11] == 1:
			await message.answer(f"üí¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.text}, —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω üí¢", reply_markup=admin_start)
		else:
			await message.answer(f"‚ùé–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.text} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω‚ùé", reply_markup=admin_start)
			await bot.send_message(userban[3], "‚ÄºÔ∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ ‚ÄºÔ∏è")

			db.change("UPDATE users SET ban = ? WHERE user_id = ?", (1, userban[3]))
			
		await state.finish()

@dp.message_handler(state=NotBanUsers.loginuser)
async def baned_users(message: types.Message, state: FSMContext):

	await state.update_data(loginuser=message.text)

	notban = db.get("SELECT * FROM users WHERE login = ?", (message.text,))

	if not notban:
		await message.answer(f"üí¢ –ù–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ª–æ–≥–∏–Ω–æ–º: {message.text} üí¢")
	else:
		await message.answer(f"‚ùé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{message.text}</b> —É—Å–ø–µ—à–Ω–æ <b>—Ä–∞–∑–±–∞–Ω–µ–Ω</b> ‚ùé", reply_markup=admin_start)
		await bot.send_message(notban[3], "‚úÖ –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ‚úÖ")

		db.change("UPDATE users SET ban = ? WHERE user_id = ?", (0, notban[3]))
			
		await state.finish()
# –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è------------------------------------------------------


# –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏ –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞ --------------------------------
# –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
@dp.message_handler(state=AddBalanceUsers.login)
async def add_login(message: types.Message, state: FSMContext):

	user = db.get("SELECT * FROM users WHERE login = ?", (message.text,))

	if not user:
 		await message.answer(f"–ù–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.text}")
	else:
		await state.update_data(login=message.text)
		await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è")
		await AddBalanceUsers.depositAmount.set()

# –°—É–º–º–∞ –ø–æ–ø–ª–Ω–µ–Ω–∏—è
@dp.message_handler(state=AddBalanceUsers.depositAmount)
async def add_deposit(message: types.Message, state: FSMContext):

	if  message.text.replace(".", "", 1).isdigit() == False:
		await message.reply("–ù–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –Ω–∏—á–µ–≥–æ –∫—Ä–æ—á–µ —á–∏—Å–ª–∞")
	else:
		await state.update_data(depositAmount=message.text)
		data = await state.get_data()

		await message.answer(
			f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∞–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{data['login']}?\n–ù–∞ —Å—É–º–º—É: {data['depositAmount']}$",
			reply_markup=InlineKeyboardMarkup(row_width=2).add(
				InlineKeyboardButton(text="–î–∞", callback_data="add_balance_yes")
				)
			)
		await AddBalanceUsers.end.set()
# –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏ –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞ –∫–æ–Ω–µ—Ü---------------------------

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞------------------------------------------------------------------
@dp.message_handler(state=Addsections.name)
async def add_section(message: types.Message, state: FSMContext):
	await state.update_data(name=message.text)
	await message.answer(f"–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ä–∞–∑–¥–µ–ª: {message.text}", reply_markup=admin_start)
	db.change("INSERT INTO sections VALUES(NULL, ?)", (message.text,))
	await state.finish()
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–Ω–µ—Ü------------------------------------------------------------