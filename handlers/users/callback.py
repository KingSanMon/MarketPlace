from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher import filters
from keyboards.keyboard import *
from states.States import *
from loader import dp, db, bot
import config as cfg
import datetime

@dp.callback_query_handler(text="profile_button")
async def process_profile_command(call: types.CallbackQuery):
    date_register = db.get("SELECT date_register FROM users WHERE user_id = ?", (call.from_user.id,))
    balance = db.get("SELECT balance FROM users WHERE user_id = ?", (call.from_user.id,))
    transactions = db.get("SELECT number_transactions FROM users WHERE user_id = ?", (call.from_user.id,))
    for balance in balance:
        pass
    for x in date_register:
        date = datetime.datetime.fromtimestamp(x).strftime('%d-%m-%Y')
    for transactions in transactions:
        pass
    await call.message.edit_text(
        f"üë§–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: \nüìÉ–õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {call.from_user.username}\n‚è≥–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {date}\nüëë–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {transactions}\nüíµ–ë–∞–ª–∞–Ω—Å: {balance}$\n‚öñ–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ –≤ –±–æ—Ç–∞: 0$\n‚öñ–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤–≤–µ–¥–µ–Ω–æ –≤ –±–æ—Ç–∞: 0$",
        parse_mode="html",
        reply_markup = profile_keyboard
    )
    
@dp.callback_query_handler(text="support_button")
async def process_support_command(call: types.CallbackQuery):
    await call.message.edit_text(
        f"üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n@wolfsblood550 - –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n@lolzcoder_star - –î–∏—Ä–µ–∫—Ç–æ—Ä\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –ø–æ –ø–æ–≤–æ–¥—É –æ—à–∏–±–æ–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –¥–µ—Ä–µ–∫—Ç–æ—Ä—É",
        parse_mode="html",
        reply_markup = support_keyboard
    )

@dp.callback_query_handler(text="add_balance_button")
async def process_add_balance_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üí≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:',
        parse_mode="html",
        reply_markup = add_money_keyboard
    )
    
@dp.callback_query_handler(text="withdraw_money_button")
async def process_withdraw_balance_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üí≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞:',
        parse_mode="html",
        reply_markup = withdraw_money_keyboard
    )
    
@dp.callback_query_handler(text="referal_system_button")
async def process_referal_command(call: types.CallbackQuery):
    await call.message.edit_text(
        f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/{cfg.BOT_NICKNAME}?start={call.from_user.id}",
        parse_mode="html",
        reply_markup = referal_system_keyboard
    )
    
@dp.callback_query_handler(text="guarantee_deal_button")
async def process_guarntee_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üõí–ñ–µ–ª–∞–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–¥–µ–ª–∫—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º?üõí',
        parse_mode="html",
        reply_markup = guarantee_deal_keyboard
    )
    
@dp.callback_query_handler(text="my_purchases_button")
async def process_purchases_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üõí‚Äç –í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏:\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–∞—Ö –ø–æ –∞–π–¥–∏—à–Ω–∏–∫—É ',
        parse_mode="html",
        reply_markup = my_purchases_keyboard
    )
    
@dp.callback_query_handler(text="market_button")
async def process_market_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üì∞ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É',
        parse_mode="html",
        reply_markup = market_keyboard
    )   

#–ö–Ω–æ–ø–∫–∏ —Ä—ã–Ω–∫–∞
    
@dp.callback_query_handler(text="accounts_button")
async def process_accounts_command(call: types.CallbackQuery):
    await call.message.edit_text(
        '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ —Ç–µ–º–∞—Ç–∏–∫–µ:',
        parse_mode="html",
        reply_markup = accounts_keyboard
    )
    
@dp.callback_query_handler(text="manuals_button")
async def process_manuals_command(call: types.CallbackQuery):
    await call.message.edit_text(
        '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ —Ç–µ–º–∞—Ç–∏–∫–µ:',
        parse_mode="html",
        reply_markup = manuals_keyboard
    )

@dp.callback_query_handler(text="add_your_product_button")
async def process_add_product_command(call: types.CallbackQuery):
    await call.message.edit_text(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:',
        parse_mode="html",
        reply_markup = add_your_product_keyboard
    )

#–ö–Ω–æ–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

@dp.callback_query_handler(text="your_referals_button")
async def process_your_referals_command(call: types.CallbackQuery):
    await call.message.edit_text(
        f"üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {db.count_referals(call.from_user.id)}",
        parse_mode="html",
        reply_markup = your_referals_keyboard
    )

#–ö–ù–û–ü–ö–ò –°–î–ï–õ–ö–ò –° –ì–ê–†–ê–ù–¢–û–ú
    
# –∑–∞–≥—Ä—É–∑–∫–∞ —Å—É–º–º—ã   
@dp.callback_query_handler(text="buyer_button", state=None)
async def start_deal(call: types.CallbackQuery, state: FSMContext):   
    await call.message.edit_text("üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏:\nüîµ–ø—Ä–∏–º–µ—Ä: üîò20  üîò20.20üîµ")
    await StateMessage.translation.set()

# –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@dp.callback_query_handler(state=StateMessage.end, text=["end–ïransaction"])
async def call_sss(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await call.message.edit_text(
        f"üíµ–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {data['translation']}$\nü™™–Ω–∏–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: @{data['nickname']}\nüìÑ–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏: {data['description']}",
        reply_markup = my_purchases_keyboard
    )
    await bot.send_message(data['userid'][0],
                f"–í–∞–º –ø—Ä–∏—à–µ–ª –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–¥–µ–ª–∫—É\nüíµC—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {data['translation']}$\nü™™–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: @{call.from_user.username}\nüìÑ–£—Å–ª–æ–≤–∏–µ —Å–¥–µ–ª–∫–∏: {data['description']}",
                reply_markup = InlineKeyboardMarkup(row_width=1).add(
                        InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É", callback_data="end–ïransaction_users")
                    )           
                )
    await state.finish()
    
    


#   –ö–ù–û–ü–ö–ò –ù–ê–ó–ê–î

@dp.callback_query_handler(state=StateMessage.end, text=["backMenu_after_deal"]) 
async def process_backMenu_command(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_text(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ <b>–Ω–∞—à–µ–º –º–∞—Ä–∫–µ—Ç–µ!</b> –í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞–º!ü§ë",
        parse_mode="html",
        reply_markup = start_keyboard
    )
    await state.finish() 

@dp.callback_query_handler(text="backMenu")
async def process_backMenu_command(call: types.CallbackQuery):
    await call.message.edit_text(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ <b>–Ω–∞—à–µ–º –º–∞—Ä–∫–µ—Ç–µ!</b> –í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞–º!ü§ë",
        parse_mode="html",
        reply_markup = start_keyboard
    )

@dp.callback_query_handler(text="backReferalMenu")
async def process_backReferalMenu_command(call: types.CallbackQuery):
    await call.message.edit_text(
        f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/{cfg.BOT_NICKNAME}?start={call.from_user.id}",
        parse_mode="html",
        reply_markup = referal_system_keyboard
    )
 
@dp.callback_query_handler(text="backGuaranteeMenu")
async def process_backGuaranteeMenu_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üì¨ –°–æ–∑–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Å–¥–µ–ª–∫—É: ',
        parse_mode="html",
        reply_markup = guarantee_deal_keyboard
    )
    
@dp.callback_query_handler(text="backMarketMenu")
async def process_backMarketMenu_command(call: types.CallbackQuery):
    await call.message.edit_text(
        'üì∞ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É',
        parse_mode="html",
        reply_markup = market_keyboard
    )   

@dp.callback_query_handler(text="backProductMenu")
async def process_backProductlMenu_command(call: types.CallbackQuery):
    await call.message.edit_text(
        '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ —Ç–µ–º–∞—Ç–∏–∫–µ:',
        parse_mode="html",
        reply_markup = manuals_keyboard
    )