from loader import db, dp, bot
from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards.keyboard import *
from states.States import *
import time

# @dp.message_handler(commands=["start"], state="*", chat_type=["private"])
# async def start(message: types.Message, state: FSMContext):

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    if db.get("SELECT id FROM users WHERE user_id = ?", (message.from_user.id,)) == None:
        start_command = message.text
        referrer_id = str(start_command[7:])
        if str(referrer_id) != "":
            if str(referrer_id) != str(message.from_user.id):
                db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, ?)", (message.chat.username, int(time.time()), message.from_user.id, referrer_id,))
                try:
                    await bot.send_message(referrer_id, "üíé–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —É –≤–∞—Å –ø–ª—é—Å 1 —Ä–µ—Ñ–µ—Ä–∞–ªüíé")
                except:
                    pass
            else:
                db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, NULL)", (message.chat.username, int(time.time()), message.from_user.id,))
                await bot.send_message(message.from_user.id, "–ù–µ–ª—å–∑—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ")
        else:
            db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, NULL)", (message.chat.username, int(time.time()), message.from_user.id,))
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º <b>–º–∞—Ä–∫–µ—Ç–µ!</b> –í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞–º!ü§ë",
        parse_mode="html",
        reply_markup = start_keyboard
    )
    print('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ', message.chat.username, message.chat.first_name, message.chat.last_name, ' –Ω–∞–∂–∞–ª —Å—Ç–∞—Ä—Ç')