from loader import db, dp, bot
from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards.keyboard import *
from states.States import *
import time

# @dp.message_handler(commands=["start"], state="*", chat_type=["private"])
# async def start(message: types.Message, state: FSMContext):

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    if db.get("SELECT id FROM users WHERE user_id = ?", (message.from_user.id,)) == None:
        start_command = message.text
#       –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ —Ä–µ—Ñ–µ—Ä–∞
        referrer_id = str(start_command[7:])
#       –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ —Ä–µ—Ñ–µ—Ä–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ
        if str(referrer_id) != "":
#           –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ —á–µ–ª–æ–≤–µ–∫ –Ω–µ –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å–≤–æ–π —Å—Å—ã–ª–∫–µ
            if str(referrer_id) != str(message.from_user.id):
                db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, ?, 0)", (message.chat.username, int(time.time()), message.from_user.id, referrer_id,))
                try:
#                    –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –ø–æ –µ–≥–æ —Å—Å—ã–ª–∫–µ –ø–µ—Ä–µ—à–ª–∏
                    await bot.send_message(referrer_id, "üíé–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —É –≤–∞—Å –ø–ª—é—Å 1 —Ä–µ—Ñ–µ—Ä–∞–ªüíé")
                except:
                    pass
            else:
#               –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å –ø—Ä–∏ —ç—Ç–æ–º –≤—ã–ø–∞–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –µ–≥–æ –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ —é–∑–µ—Ä–∞
                db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, NULL, 0)", (message.chat.username, int(time.time()), message.from_user.id,))
                await bot.send_message(message.from_user.id,
                                       "‚ùå‚ö†Ô∏è–û—Ç–∫–ª–æ–Ω–µ–Ω–æ. –ü—Ä–∏—á–∏–Ω–∞:\n–ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ –æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ‚ö†Ô∏è‚ùå"
                                       )
        else:
#           –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–ª –ø–æ —Å—Å—ã–ª–∫–µ
            db.change(f"INSERT INTO users VALUES(NULL, ?, ?, ?, NULL, 0)", (message.chat.username, int(time.time()), message.from_user.id,))
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º <b>–º–∞—Ä–∫–µ—Ç–µ!</b> –í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞–º!ü§ë",
        parse_mode="html",
        reply_markup = start_keyboard
    )

# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä—É—é –≤–≤–µ–ª–∏
@dp.message_handler(state=StateMessage.translation)
async def add_translation(message: types.Message, state: FSMContext):   

    if message.text.isdigit() == False:
        await message.answer("‚ùå–ù–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –Ω–∏—á–µ–≥–æ –∫—Ä–æ—á–µ —á–∏—Å–ª–∞‚ùå")
    else:
        await state.update_data(translation=message.text)
        await message.answer("ü™™–í–≤–µ–¥–∏—Ç–µ nickname –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èü™™\nüîµ–ø—Ä–∏–º–µ—Ä: @lolzcoder_starüîµ")
        await StateMessage.nickname.set()
    
# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É–∫–∞–∑–∞–ª–∏    
@dp.message_handler(state=StateMessage.nickname)
async def add_username(message: types.Message, state: FSMContext):
    
    await state.update_data(nickname=message.text)
    await message.answer("‚ùáÔ∏è‚öúÔ∏è–í–≤–µ–¥–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ —Å–¥–µ–ª–∫–∏‚öúÔ∏è‚ùáÔ∏è\n–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø—Ä–∏ –∫–∞–∫–æ–º —É—Å–ª–æ–≤–∏–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä")
    await StateMessage.description.set()
    
@dp.message_handler(state=StateMessage.nickname)
async def add_description(message: types.Message, state: FSMContext):
    
    await state.update_data(description=message.text)
    await state.finish()
    
    